<?
class email {
	private $FROM;		private $HTML_FROM;
	private $TO;		private $HTML_TO;
	private $SUBJECT;	private $HTML_SUBJECT;
	private $MESSAGE;	private $HTML_MESSAGE;
	private $ADMIN = 'lyhana8';
	private $READONLY = 'readonly=readonly';
	private $DISABLE = array('from' => '', 'to' => '', 'subject' => '', 'message' => '', );
	private $VIEW_MODE = 'form';
	private $FORM_HEAD;
	private $FORM_BODY;
	private $FORM_TAIL;
	private $FORM_SEND_TAIL;
	private $FORM_PREVIEW_TAIL;
	private $NO_EMAIL;

	public $HTML;

	function define_blocks()
	{//
		$this->FORM_HEAD = <<<FORM_HEAD
		<form action='?' name='mail' id='mail' method='post' >
			<input type='hidden' name='p' value='mail' />
			<input type='hidden' name='checker' value='yes' />
FORM_HEAD;
		// fieldlist
		$this->FORM_BODY = "
			<dl>
				<dt><label for='from' >from:</label></dt>
					<dd>
      					{$this->HTML_FROM}
					</dd>
				<dt><label for='to' >to:</label></dt>
					<dd>
						{$this->HTML_TO}
					</dd>
				<dt><label for='subject' >subject:</label></dt>
					<dd>
						{$this->HTML_SUBJECT}
					</dd>
				<dt><label for='message' >message:</label></dt>
					<dd>
						{$this->HTML_MESSAGE}
					</dd>
			</dl>
			<br/>";
		// end of form
		$this->FORM_PREVIEW_TAIL = <<<FORM_PREVIEW_TAIL
			<input type='submit' name='preview' id='preview' value=' preview ' />
		</form>
FORM_PREVIEW_TAIL;

		$this->FORM_SEND_TAIL = <<<FORM_SEND_TAIL
			<input type='hidden' name='sender' value='yes' />
			<input type='submit' name='send' id='send' value=' send ' />
		</form>
FORM_SEND_TAIL;
		// user don't have yet defined his email address
		$this->NO_EMAIL = <<<NO_EMAIL
				<p>You need to <a href='?p=profile'>set your email</a> to be able to sent one.</p>
				<div class='p'>
					If you don't have an email address, you can create one at <a href='http://www.gmail.com'>gmail.com</a>.
					<img class='info i16' src='_files/icons_themes/silk/information.png' alt='information' title='informations' />
				</div>
NO_EMAIL;
	}

	function check_email($email) {
// 		echo 'chech_email() in mail.phpc';
		return true;
	}
	function send()
	{
		$headers = 'From: '.$_SESSION['login'].'\r\n' .
					'Reply-To: '.$this->TO.'\r\n' .
					'X-Mailer: PHP/' . phpversion();

		if (@mail($to, $this->SUBJECT, $this->MESSAGE, $headers))
		{// mail sended
		} else
		{// error during mailing
			$this->HTML = <<<ERR
				<img src='_files/icons_themes/silk/exclamation.png' alt='/!\' />&nbsp;An error occured during the mailing.
				<br/>
				<br/>
				<p>Please <a href='?p=mail' >try again</a>.</p>
ERR;
		}
	}

	function member_definition()
	{
		$this->TO = $_REQUEST['to'];
		$this->FROM = $_SESSION['login'];
		$this->SUBJECT = $_REQUEST['subject'];
		$this->MESSAGE = $_REQUEST['message'];
	}

	function is_valid_form()
	{// check form validity
		$valid = false; // default form is wrong, if all is OK then it become valid
		$errors = array();

		if (sdaa()==FALSE)
		{
			$errors[] = "The <em>from field</em> is invalid.\n";
		}
		if (empty($message)==TRUE)
		{//
			$errors[] = "Your <em>message</em> must not be empty.\n";
		}
		if (empty($errors)==TRUE)
		{// no errors found
			$valid = true;
		}
		return $valid;
	}

	function clear_str(&$str)
	{// clear a string to submit
		return trim(stripslashes($str));
	}

	function is_valid_email()
	{
		$q = "SELECT contact_me FROM users WHERE user='".$_SESSION['login']."';";
		$res = $o_DB->query($q);

		return filter_data($res, FILTER_VALIDATE_EMAIL);

	}

	function set_mail_param()
	{// define parameters for mail function
		if (!isset($_REQUEST['mail']) || $_REQUEST['mail']=='lyhana8@gmail.com')
		{// define variables for the mail function
			$friender_from =  'Visiteur de '.$GLOBALS['site'].' <'.$_SESSION['login'].'>';
		}
	}

	function display_form()
	{
		if ($this->VIEW_MODE=='form')
		{
			$this->HTML_FROM = "<input type='text' name='from' value='{$_SESSION['login']}' {$this->DISABLE['from']} title='your email' size='40' />"
						."<span class='hidden em'> (obligatory).</span>\n";
			$this->HTML_TO = "<input type='text' name='to' value='{$this->TO}' {$this->DISABLE['to']} title='your email' size='40' />\n"
						."<span class='hidden em'> (obligatory).</span>\n";
			$this->HTML_SUBJECT = "<input type='text' name='subject' value='{$this->SUBJECT}' {$this->DISABLE['subject']} title='email subject' size='40' />"
						."<span class='hidden em'> (optional)</span>\n";
			$this->HTML_MESSAGE = "<span class='em'>(obligatory).</span>\n"
						."<textarea name='message' {$this->DISABLE['message']} >{$this->subjet}</textarea>\n";

			self::define_blocks();
			$this->FORM_TAIL = $this->FORM_PREVIEW_TAIL;
		}
		if ($this->VIEW_MODE=='preview')
		{
			$this->HTML_FROM = $_REQUEST['from'];
			$this->HTML_TO = $_REQUEST['to'];
			$this->HTML_SUBJECT = $_REQUEST['subject'];
			$this->HTML_MESSAGE = "<div class='bord'>".nl2br(htmlentities(stripslashes($_REQUEST['message']), ENT_NOQUOTES, 'UTF-8'))."</div>";

			self::define_blocks();
			$this->FORM_TAIL = $this->FORM_SEND_TAIL;
		}
		$this->HTML = $this->FORM_HEAD . $this->FORM_BODY . $this->FORM_TAIL;
}

	function minimals_conditions()
	{// check minimals conditions to send an email exist: recipient address + sender address
		$minimals_conditions = FALSE;

		if (empty($_SESSION['email'])==TRUE)
		{// user haven't yet define is email -> profile page to define it
			self::define_blocks();
			$this->HTML = $this->NO_EMAIL;
		} else {
			$minimals_conditions = TRUE;
			$this->DISABLE['from'] = $this->READONLY;

			if (isset($_REQUEST['to'])==FALSE)
			{// no recipient defined -> default recipient = admin + disable field
				$this->TO = $this->ADMIN;
				$this->DISABLE['to'] = $this->READONLY;
			}
			if (isset($_REQUEST['subject'])==TRUE && empty($_REQUEST['subject'])==FALSE)
			{
				$this->SUBJECT = $_REQUEST['subject'];
				$this->DISABLE['subject'] = $this->READONLY;
			}
		}

		return $minimals_conditions;
	}

	function __construct()
	{// check mode or writing mode ?
// 		pre_print_r($_REQUEST);
		if ($_REQUEST['sender']=='yes')
		{

		}
		elseif ($_REQUEST['checker']=='yes')
		{// we check the form validity
			self::member_definition();
			$this->VIEW_MODE = 'preview';
			self::display_form();
		} else
		{// display form with default value
			if (self::minimals_conditions()==TRUE)
			{// if minimals conditions are OK
				self::display_form();
			}
		}
	}
}

// $_SESSION['login'] = 'toto806';
// $email = new email();
?>