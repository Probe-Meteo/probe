<?php

require_once APPPATH."models/dao/daoConfigFileManager.php";
require_once APPPATH."annotation/MyORM.php";

class Dao_config_file_manager extends DaoFile {
    private $_configFile = null;


    function __construct($requestedConfig) {
        parent::__construct();
    }

/*
**
*/
    static function read($requestedConfig) {
        switch ($requestedConfig) {
            case 'station':
                $config = self::fetchConfig('../stations.conf'); // path from admin/ folder
                break;
            case 'global':
                $config = self::fetchGlobalConfig();
                break;
            default:
                $config = null;
        }

        return $config;
    }


    /*
     * @description: return the content of the config file if its present and readable, null otherwise
     * @return: array or null
     */
    static function fetchConfig($file) { //
        $filePath = $GLOBALS['workingFolder'].$file;

        if (is_file($filePath)
            && self::_is_readable($filePath)
        ) {
            $config = eval('return '.file_get_contents($filePath).';');
        } else { // do NOT edit this file
                $config = null;
        }

        return $config;
    }


    /*
     * @description: check if the file is readable, display an error otherwise
     * @return: boolean
     */
    static function _is_readable($filename) { //
        if (is_readable($filename)) {
//             echo _(sprintf('The file <i>%s</i> is readable', basename($filename)));
            return true;
        } else {
            echo _(sprintf('The file <i>%s</i> is <strong>not</strong> readable', $filename));
            return false;
        }
    }


    /*
     * @description: probe
     * @return: global configuration file
     */
    static function fetchGlobalConfig() { //
        if (is_file( $GLOBALS['workingFolder'].'./Probe.conf')) {
            $globalConfig = eval('return '.file_get_contents($GLOBALS['workingFolder'].'./Probe.conf').';');
        } else { // do NOT edit this file
            $globalConfig = eval('return '.file_get_contents($GLOBALS['workingFolder'].'./Probe.default.conf').';');
        }
        return $globalConfig;
    }



}
?>